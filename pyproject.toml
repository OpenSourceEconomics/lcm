# Reference: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#static-vs-dynamic-metadata

# ======================================================================================
# Project metadata
# ======================================================================================

[project]
name = "lcm"
dynamic = ["version"]
authors = [
    { name = "Tim Mensinger", email = "mensingertim@gmail.com" },
    { name = "Hans-Martin von Gaudecker", email = "hmgaudecker@uni-bonn.de" },
    { name = "Janos Gabler" },
]
description = "This package aims to generalize and facilitate the specification, solving, and estimation of dynamic choice models."
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
keywords = [
    "Dynamic programming",
    "Econometrics",
    "Economics",
    "Estimation",
    "Life cycle models",
    "Statistics",
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.11"
dependencies = [
    "dags",
    "jax>=0.4.10",
    "jaxlib>=0.4.10",
    "numpy",
    "pandas",
]

[project.urls]
Repository = "https://github.com/opensourceeconomics/lcm"
Github = "https://github.com/opensourceeconomics/lcm"
Tracker = "https://github.com/OpenSourceEconomics/lcm/issues"


# ======================================================================================
# Build system configuration
# ======================================================================================

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/lcm/_version.py"

[tool.check-manifest]
ignore = ["src/lcm/_version.py"]


# ======================================================================================
# Ruff configuration
# ======================================================================================

[tool.ruff]
target-version = "py311"
fix = true

[tool.ruff.lint]
select = ["ALL"]
extend-ignore = [
    # missing type annotation
    "ANN001",

    # missing type annotation for `*args`
    "ANN002",

    # missing type annotation for `**kwargs`
    "ANN003",

    # missing return type annotation for public function
    "ANN201",

    # missing return type annotation for private function
    "ANN202",

    # Missing docstring in public module
    "D100",

    # missing docstring in public function
    "D103",

    # missing docstring in public package
    "D104",

    # exception must not use a string literal
    "EM101",

    # exception must not use an f-string literal
    "EM102",

    # line contains a todo
    "FIX002",

    # Too many arguments to function call
    "PLR0913",

    # use of `assert` detected
    "S101",

    # `pickle` module is unsafe
    "S301",

    # Private member accessed: `_stochastic_info`
    "SLF001",

    # long messages outside the exception class
    "TRY003",
]

[tool.ruff.lint.per-file-ignores]
"docs/source/conf.py" = ["E501", "ERA001", "DTZ005"]
"tests/test_*.py" = ["PLR2004"]
"examples/*" = ["INP001"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# ======================================================================================
# NBQA configuration
# ======================================================================================

[tool.nbqa.config]
black = "pyproject.toml"

[tool.nbqa.mutate]
black = 1


# ======================================================================================
# Pytest configuration
# ======================================================================================

[tool.pytest.ini_options]
markers = [
    "wip: Tests that are work-in-progress.",
    "slow: Tests that take a long time to run and are skipped in continuous integration.",
    "illustrative: Tests are designed for illustrative purposes",
]
norecursedirs = ["docs", ".envs"]


# ======================================================================================
# yamlfix configuration
# ======================================================================================

[tool.yamlfix]
line_length = 88
sequence_style = "block_style"
none_representation = "null"
